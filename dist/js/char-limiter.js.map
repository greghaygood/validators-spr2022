{"version":3,"sources":["char-limiter.js"],"names":["CharLimiter","elementFromOutside","max","evt","curLen","element","value","length","remaining","options","console","log","keyCode","includes","preventDefault","DEFAULT_OPTIONS","trimEmpty","dataset","cleanOptions","setup","object","Object","keys","forEach","key","parseInt","feedback","document","createElement","classList","add","parentNode","appendChild","addEventListener","handleKeyDown","handleKeyUp"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACMA,W;AAMF,uBAAYC,kBAAZ,EAAgC;AAAA;;AAAA;;AAAA,6CAJd;AACdC,MAAAA,GAAG,EAAE;AADS,KAIc;;AAAA,2CA6ChB,UAACC,GAAD,EAAS;AACrB,UAAMC,MAAM,GAAG,KAAI,CAACC,OAAL,CAAaC,KAAb,CAAmBC,MAAlC;AACA,UAAMC,SAAS,GAAG,KAAI,CAACC,OAAL,CAAaP,GAAb,GAAmBE,MAArC;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,GAAG,CAACS,OAA3B,EAAoCR,MAApC,EAA4CI,SAA5C;;AACA,UAAIA,SAAS,IAAI,CAAjB,EAAoB;AAChB,YAAI,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgBK,QAAhB,CAAyBV,GAAG,CAACS,OAA7B,CAAJ,EAA2C;AAAE;AAAQ,SADrC,CAEhB;;;AAEAT,QAAAA,GAAG,CAACW,cAAJ;AACH;AACJ,KAvD+B;;AAAA,yCAyDlB,UAACX,GAAD,EAAS;AACnB,UAAMC,MAAM,GAAG,KAAI,CAACC,OAAL,CAAaC,KAAb,CAAmBC,MAAlC;AACA,UAAMC,SAAS,GAAG,KAAI,CAACC,OAAL,CAAaP,GAAb,GAAmBE,MAArC;AACH,KA5D+B;;AAC5B,SAAKC,OAAL,GAAeJ,kBAAf;AACA,SAAKQ,OAAL,mCACO,KAAKM,eADZ,GAEO,KAAKC,SAAL,CAAef,kBAAkB,CAACgB,OAAlC,CAFP;AAIA,SAAKC,YAAL;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8C,KAAKN,OAAnD,EAA4D,KAAKI,OAAjE;AACA,SAAKU,KAAL;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;;;WACI,mBAAUC,MAAV,EAAkB;AACdC,MAAAA,MAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoBG,OAApB,CAA4B,UAACC,GAAD,EAAS;AACjC,YAAI,CAACJ,MAAM,CAACI,GAAD,CAAX,EAAkB;AACd,iBAAOJ,MAAM,CAACI,GAAD,CAAb;AACH;AACJ,OAJD;AAKA,aAAOJ,MAAP;AACH;;;WAED,wBAAe;AAAA;;AACX,OAAC,KAAD,EAAQ,KAAR,EAAeG,OAAf,CAAuB,UAACC,GAAD,EAAS;AAC5B,YAAI,MAAI,CAACf,OAAL,CAAae,GAAb,CAAJ,EAAuB;AACnB,UAAA,MAAI,CAACf,OAAL,CAAae,GAAb,IAAoBC,QAAQ,CAAC,MAAI,CAAChB,OAAL,CAAae,GAAb,CAAD,CAA5B;AACH;AACJ,OAJD;AAKH;;;WAED,iBAAQ;AACJd,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAKN,OAApC;AAEA,WAAKqB,QAAL,GAAgBC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAhB;AACA,WAAKF,QAAL,CAAcG,SAAd,CAAwBC,GAAxB,CAA4B,UAA5B;AACA,WAAKzB,OAAL,CAAa0B,UAAb,CAAwBC,WAAxB,CAAoC,KAAKN,QAAzC;AAEA,WAAKrB,OAAL,CAAa4B,gBAAb,CAA8B,SAA9B,EAAyC,KAAKC,aAA9C;AACA,WAAK7B,OAAL,CAAa4B,gBAAb,CAA8B,OAA9B,EAAuC,KAAKE,WAA5C;AACH","sourcesContent":["/**\n * CharLimiter will be given a single DOM element to do its thing.\n * \n * @var element \n * @var options\n * \n * @constructor Takes a single DOM element\n */\nclass CharLimiter {\n\n    DEFAULT_OPTIONS = {\n        max: 10\n    }\n\n    constructor(elementFromOutside) {\n        this.element = elementFromOutside\n        this.options = {\n            ...this.DEFAULT_OPTIONS,\n            ...this.trimEmpty(elementFromOutside.dataset)\n        }\n        this.cleanOptions()\n        console.log('setting up new CharLimiter for', this.element, this.options)\n        this.setup()\n    }\n\n    /**\n     * Will remove any keys with empty/null values\n     * \n     * @param {Object} object \n     * @returns object\n     */\n    trimEmpty(object) {\n        Object.keys(object).forEach((key) => {\n            if (!object[key]) {\n                delete object[key]\n            }\n        })\n        return object\n    }\n\n    cleanOptions() {\n        ['max', 'min'].forEach((key) => {\n            if (this.options[key]) {\n                this.options[key] = parseInt(this.options[key])\n            }\n        })\n    }\n\n    setup() {\n        console.log('setting up for ', this.element)\n\n        this.feedback = document.createElement(\"span\")\n        this.feedback.classList.add(\"feedback\")\n        this.element.parentNode.appendChild(this.feedback)\n\n        this.element.addEventListener('keydown', this.handleKeyDown)\n        this.element.addEventListener('keyup', this.handleKeyUp)\n    }\n\n    handleKeyDown = (evt) => {\n        const curLen = this.element.value.length\n        const remaining = this.options.max - curLen\n        console.log(\"keydown\", evt.keyCode, curLen, remaining)\n        if (remaining <= 0) {\n            if ([8, 46, 37, 39].includes(evt.keyCode)) { return }\n            // if (evt.keyCode == 8 || evt.keyCode == 46) { return }\n\n            evt.preventDefault()\n        }\n    }\n\n    handleKeyUp = (evt) => {\n        const curLen = this.element.value.length\n        const remaining = this.options.max - curLen\n    }\n}"],"file":"char-limiter.js"}